{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE = 'https://pixabay.com/api/';\nconst API_KEY = '52591555-089c8d48efe1c098578f49548';\n\nexport function getImagesByQuery(query) {\n  const params = {\n    key: API_KEY,\n    q: query,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n    per_page: 40,\n  };\n\n  return axios.get(API_BASE, { params }).then(response => {\n    return response.data;\n  });\n}\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport 'loaders.css/loaders.min.css';\n\nconst galleryRef = document.getElementById('gallery');\nconst loaderRef = document.getElementById('loader');\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nexport function createGallery(images) {\n  if (!Array.isArray(images) || images.length === 0) return;\n\n  const markup = images\n    .map(img => {\n      const {\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      } = img;\n\n      return `\n      <li class=\"gallery__item\">\n        <a href=\"${largeImageURL}\" class=\"gallery__link\">\n          <img class=\"gallery__image\" src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n        </a>\n        <div class=\"card-stats\">\n          <span>üëç ${likes}</span>\n          <span>üëÅ ${views}</span>\n          <span>üí¨ ${comments}</span>\n          <span>‚¨á ${downloads}</span>\n        </div>\n      </li>\n    `;\n    })\n    .join('');\n\n  galleryRef.insertAdjacentHTML('beforeend', markup);\n\n  lightbox.refresh();\n}\n\nexport function clearGallery() {\n  galleryRef.innerHTML = '';\n}\n\nexport function showLoader() {\n  if (!loaderRef) return;\n  loaderRef.classList.add('visible');\n  loaderRef.setAttribute('aria-hidden', 'false');\n}\n\nexport function hideLoader() {\n  if (!loaderRef) return;\n  loaderRef.classList.remove('visible');\n  loaderRef.setAttribute('aria-hidden', 'true');\n}\n","import { getImagesByQuery } from './js/pixabay-api.js';\nimport {\n  createGallery,\n  clearGallery,\n  showLoader,\n  hideLoader,\n} from './js/render-functions.js';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.getElementById('search-form');\nconst input = document.getElementById('search-input');\n\nfunction notifyEmptyQuery() {\n  iziToast.warning({\n    title: 'Warning',\n    message: 'Please enter a search query.',\n    position: 'topRight',\n  });\n}\n\nfunction notifyNoResults() {\n  iziToast.error({\n    title: 'No results',\n    message:\n      'Sorry, there are no images matching your search query. Please try again!',\n    position: 'topRight',\n  });\n}\n\nfunction notifyError(errorMessage = 'An error occurred while fetching images') {\n  iziToast.error({\n    title: 'Error',\n    message: errorMessage,\n    position: 'topRight',\n  });\n}\n\nform.addEventListener('submit', evt => {\n  evt.preventDefault();\n\n  const query = input.value.trim();\n\n  if (query.length === 0) {\n    notifyEmptyQuery();\n    return;\n  }\n\n  clearGallery();\n  showLoader();\n\n  getImagesByQuery(query)\n    .then(data => {\n      if (!data || !Array.isArray(data.hits)) {\n        notifyError('Unexpected response format from API.');\n        return;\n      }\n\n      if (data.hits.length === 0) {\n        notifyNoResults();\n        return;\n      }\n\n      createGallery(data.hits);\n    })\n    .catch(err => {\n      console.error('API error:', err);\n      notifyError(err.message || 'Failed to fetch images.');\n    })\n    .finally(() => {\n      hideLoader();\n    });\n});\n"],"names":["API_BASE","API_KEY","getImagesByQuery","query","params","axios","response","galleryRef","loaderRef","lightbox","SimpleLightbox","createGallery","images","markup","img","webformatURL","largeImageURL","tags","likes","views","comments","downloads","clearGallery","showLoader","hideLoader","form","input","notifyEmptyQuery","iziToast","notifyNoResults","notifyError","errorMessage","evt","data","err"],"mappings":"owBAEA,MAAMA,EAAW,2BACXC,EAAU,qCAET,SAASC,EAAiBC,EAAO,CACtC,MAAMC,EAAS,CACb,IAAKH,EACL,EAAGE,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,SAAU,EACd,EAEE,OAAOE,EAAM,IAAIL,EAAU,CAAE,OAAAI,EAAQ,EAAE,KAAKE,GACnCA,EAAS,IACjB,CACH,CCdA,MAAMC,EAAa,SAAS,eAAe,SAAS,EAC9CC,EAAY,SAAS,eAAe,QAAQ,EAE5CC,EAAW,IAAIC,EAAe,aAAc,CAChD,aAAc,MACd,aAAc,GAChB,CAAC,EAEM,SAASC,EAAcC,EAAQ,CACpC,GAAI,CAAC,MAAM,QAAQA,CAAM,GAAKA,EAAO,SAAW,EAAG,OAEnD,MAAMC,EAASD,EACZ,IAAIE,GAAO,CACV,KAAM,CACJ,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,EAAUP,EAEJ,MAAO;AAAA;AAAA,mBAEME,CAAa;AAAA,6CACaD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA,qBAGlDC,CAAK;AAAA,qBACLC,CAAK;AAAA,qBACLC,CAAQ;AAAA,oBACTC,CAAS;AAAA;AAAA;AAAA,KAIzB,CAAC,EACA,KAAK,EAAE,EAEVd,EAAW,mBAAmB,YAAaM,CAAM,EAEjDJ,EAAS,QAAO,CAClB,CAEO,SAASa,GAAe,CAC7Bf,EAAW,UAAY,EACzB,CAEO,SAASgB,GAAa,CACtBf,IACLA,EAAU,UAAU,IAAI,SAAS,EACjCA,EAAU,aAAa,cAAe,OAAO,EAC/C,CAEO,SAASgB,GAAa,CACtBhB,IACLA,EAAU,UAAU,OAAO,SAAS,EACpCA,EAAU,aAAa,cAAe,MAAM,EAC9C,CCnDA,MAAMiB,EAAO,SAAS,eAAe,aAAa,EAC5CC,EAAQ,SAAS,eAAe,cAAc,EAEpD,SAASC,GAAmB,CAC1BC,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,+BACT,SAAU,UACd,CAAG,CACH,CAEA,SAASC,GAAkB,CACzBD,EAAS,MAAM,CACb,MAAO,aACP,QACE,2EACF,SAAU,UACd,CAAG,CACH,CAEA,SAASE,EAAYC,EAAe,0CAA2C,CAC7EH,EAAS,MAAM,CACb,MAAO,QACP,QAASG,EACT,SAAU,UACd,CAAG,CACH,CAEAN,EAAK,iBAAiB,SAAUO,GAAO,CACrCA,EAAI,eAAc,EAElB,MAAM7B,EAAQuB,EAAM,MAAM,KAAI,EAE9B,GAAIvB,EAAM,SAAW,EAAG,CACtBwB,EAAgB,EAChB,MACF,CAEAL,EAAY,EACZC,EAAU,EAEVrB,EAAiBC,CAAK,EACnB,KAAK8B,GAAQ,CACZ,GAAI,CAACA,GAAQ,CAAC,MAAM,QAAQA,EAAK,IAAI,EAAG,CACtCH,EAAY,sCAAsC,EAClD,MACF,CAEA,GAAIG,EAAK,KAAK,SAAW,EAAG,CAC1BJ,EAAe,EACf,MACF,CAEAlB,EAAcsB,EAAK,IAAI,CACzB,CAAC,EACA,MAAMC,GAAO,CACZ,QAAQ,MAAM,aAAcA,CAAG,EAC/BJ,EAAYI,EAAI,SAAW,yBAAyB,CACtD,CAAC,EACA,QAAQ,IAAM,CACbV,EAAU,CACZ,CAAC,CACL,CAAC"}